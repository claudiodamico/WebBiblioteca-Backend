// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBiblioteca.Infraestructure;

#nullable disable

namespace WebBiblioteca.Migrations
{
    [DbContext(typeof(WebContext))]
    [Migration("20231020175218_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClienteLibro", b =>
                {
                    b.Property<int>("ClientesClienteID")
                        .HasColumnType("int");

                    b.Property<int>("LibrosLibroID")
                        .HasColumnType("int");

                    b.HasKey("ClientesClienteID", "LibrosLibroID");

                    b.HasIndex("LibrosLibroID");

                    b.ToTable("ClienteLibro");
                });

            modelBuilder.Entity("WebBiblioteca.Infraestructure.Entities.Alquiler", b =>
                {
                    b.Property<int>("AlquilerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlquilerID"));

                    b.Property<DateTime>("FechaAlquiler")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSocio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlquilerID");

                    b.ToTable("Alquileres");
                });

            modelBuilder.Entity("WebBiblioteca.Infraestructure.Entities.AlquilerCliente", b =>
                {
                    b.Property<int>("AlquilerID")
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.HasKey("AlquilerID", "ClienteID");

                    b.HasIndex("ClienteID");

                    b.ToTable("AlquilerCliente");
                });

            modelBuilder.Entity("WebBiblioteca.Infraestructure.Entities.AlquilerLibro", b =>
                {
                    b.Property<int>("AlquilerID")
                        .HasColumnType("int");

                    b.Property<int>("LibroID")
                        .HasColumnType("int");

                    b.HasKey("AlquilerID", "LibroID");

                    b.HasIndex("LibroID");

                    b.ToTable("AlquilerLibro");
                });

            modelBuilder.Entity("WebBiblioteca.Infraestructure.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NumeroSocio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WebBiblioteca.Infraestructure.Entities.Libro", b =>
                {
                    b.Property<int>("LibroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibroID"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clasificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Paginas")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("LibroID");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            LibroID = 1,
                            Autor = "Stephen King",
                            Clasificacion = "Suspenso",
                            Disponible = true,
                            FechaPublicacion = new DateTime(2023, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9789877255133",
                            Idioma = "Español",
                            Imagen = "https://www.tematika.com/media/catalog/Ilhsa/Imagenes/704929.jpg",
                            Nombre = "Cementerio de animales",
                            Paginas = 488,
                            Stock = 10
                        },
                        new
                        {
                            LibroID = 2,
                            Autor = "Stephen King",
                            Clasificacion = "Suspenso",
                            Disponible = true,
                            FechaPublicacion = new DateTime(2020, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9789877255164",
                            Idioma = "Español",
                            Imagen = "https://www.tematika.com/media/catalog/Ilhsa/Imagenes/704922.jpg",
                            Nombre = "Doctor sueño",
                            Paginas = 608,
                            Stock = 10
                        },
                        new
                        {
                            LibroID = 3,
                            Autor = "Stephen King",
                            Clasificacion = "Suspenso",
                            Disponible = true,
                            FechaPublicacion = new DateTime(2022, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9789877255195",
                            Idioma = "Español",
                            Imagen = "https://www.tematika.com/media/catalog/Ilhsa/Imagenes/704927.jpg",
                            Nombre = "La milla verde",
                            Paginas = 448,
                            Stock = 10
                        },
                        new
                        {
                            LibroID = 4,
                            Autor = "Stephen King",
                            Clasificacion = "Suspenso",
                            Disponible = true,
                            FechaPublicacion = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9789877255089",
                            Idioma = "Español",
                            Imagen = "https://www.tematika.com/media/catalog/Ilhsa/Imagenes/704219.jpg",
                            Nombre = "Misery",
                            Paginas = 400,
                            Stock = 10
                        },
                        new
                        {
                            LibroID = 5,
                            Autor = "Stephen King",
                            Clasificacion = "Terror",
                            Disponible = true,
                            FechaPublicacion = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9789877255218",
                            Idioma = "Español",
                            Imagen = "https://www.tematika.com/media/catalog/Ilhsa/Imagenes/699599.jpg",
                            Nombre = "La zona muerta",
                            Paginas = 456,
                            Stock = 10
                        },
                        new
                        {
                            LibroID = 6,
                            Autor = "Stephen King",
                            Clasificacion = "Suspenso",
                            Disponible = true,
                            FechaPublicacion = new DateTime(2018, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9789877255300",
                            Idioma = "Español",
                            Imagen = "https://www.tematika.com/media/catalog/Ilhsa/Imagenes/704323.jpg",
                            Nombre = "It",
                            Paginas = 1504,
                            Stock = 10
                        },
                        new
                        {
                            LibroID = 7,
                            Autor = "Stephen King",
                            Clasificacion = "Suspenso",
                            Disponible = true,
                            FechaPublicacion = new DateTime(2018, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9789877255058",
                            Idioma = "Español",
                            Imagen = "https://www.tematika.com/media/catalog/Ilhsa/Imagenes/704940.jpg",
                            Nombre = "Carrie",
                            Paginas = 256,
                            Stock = 10
                        },
                        new
                        {
                            LibroID = 8,
                            Autor = "Stephen King",
                            Clasificacion = "Suspenso",
                            Disponible = true,
                            FechaPublicacion = new DateTime(2023, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9789877255140",
                            Idioma = "Español",
                            Imagen = "https://www.tematika.com/media/catalog/Ilhsa/Imagenes/704925.jpg",
                            Nombre = "El resplandor",
                            Paginas = 656,
                            Stock = 10
                        },
                        new
                        {
                            LibroID = 9,
                            Autor = "Stephen King",
                            Clasificacion = "Suspenso",
                            Disponible = true,
                            FechaPublicacion = new DateTime(2023, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9875661244",
                            Idioma = "Español",
                            Imagen = "https://www.tematika.com/media/catalog/Ilhsa/Imagenes/421497.jpg",
                            Nombre = "La niebla",
                            Paginas = 320,
                            Stock = 10
                        },
                        new
                        {
                            LibroID = 10,
                            Autor = "Stephen King",
                            Clasificacion = "Suspenso",
                            Disponible = true,
                            FechaPublicacion = new DateTime(2023, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9871138989",
                            Idioma = "Español",
                            Imagen = "https://www.tematika.com/media/catalog/Ilhsa/Imagenes/384849.jpg",
                            Nombre = "Mientras escribo",
                            Paginas = 320,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("ClienteLibro", b =>
                {
                    b.HasOne("WebBiblioteca.Infraestructure.Entities.Cliente", null)
                        .WithMany()
                        .HasForeignKey("ClientesClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBiblioteca.Infraestructure.Entities.Libro", null)
                        .WithMany()
                        .HasForeignKey("LibrosLibroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebBiblioteca.Infraestructure.Entities.AlquilerCliente", b =>
                {
                    b.HasOne("WebBiblioteca.Infraestructure.Entities.Alquiler", "Alquiler")
                        .WithMany()
                        .HasForeignKey("AlquilerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBiblioteca.Infraestructure.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alquiler");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("WebBiblioteca.Infraestructure.Entities.AlquilerLibro", b =>
                {
                    b.HasOne("WebBiblioteca.Infraestructure.Entities.Alquiler", "Alquiler")
                        .WithMany()
                        .HasForeignKey("AlquilerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBiblioteca.Infraestructure.Entities.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alquiler");

                    b.Navigation("Libro");
                });
#pragma warning restore 612, 618
        }
    }
}
